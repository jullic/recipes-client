{
	"templates": [
		{
			"template": "div",
			"defaultPath": [
				"components"
			],
			"files": [
				{
					"extension": ".tsx",
					"path": [],
					"body": [
						"import React, { FC } from 'react'",
						"import classNames from 'classnames';",
						"",
						"import { IENTEREDNAMEProps } from './ENTEREDNAME.props';",
						"import styles from './ENTEREDNAME.module.css';",
						"",
						"export const ENTEREDNAME: FC<IENTEREDNAMEProps> = ({ className, ...props }) => {",
						"",
						"    return (",
						"        <div className={classNames(styles.root, className)} {...props}>",
						"",
						"        </div>",
						"    );",
						"}"
					]
				},
				{
					"extension": ".props.ts",
					"path": [],
					"body": [
						"import { HTMLAttributes, DetailedHTMLProps } from 'react';",
						"",
						"export interface IENTEREDNAMEProps extends DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> {",
						"",
						"}"
					]
				},
				{
					"extension": ".module.css",
					"path": [],
					"body": [
						".root {}"
					]
				},
				{
					"extension": ".test.tsx",
					"path": [],
					"body": [
						"import React from \"react\";",
						"import { render, screen, act } from \"@testing-library/react\";",
						"import userEvent from \"@testing-library/user-event\";",
						"import { ENTEREDNAME } from \"./ENTEREDNAME\";",
						"",
						"describe('ENTEREDNAME', () => {",
						"\ttest('renders App component', async () => {",
						"\t\trender(<ENTEREDNAME></ENTEREDNAME>);",
						"\t\tscreen.debug();",
						"\t});",
						"});"
					]
				}
			]
		},
		{
			"template": "btn",
			"defaultPath": [
				"components"
			],
			"files": [
				{
					"extension": ".tsx",
					"path": [],
					"body": [
						"import React, { FC } from 'react'",
						"import classNames from 'classnames';",
						"",
						"import { IENTEREDNAMEProps } from './ENTEREDNAME.props';",
						"import styles from './ENTEREDNAME.module.css';",
						"",
						"export const ENTEREDNAME: FC<IENTEREDNAMEProps> = ({ className, ...props }) => {",
						"",
						"    return (",
						"        <button className={classNames(styles.root, className)} {...props}>",
						"",
						"        </button>",
						"    );",
						"}"
					]
				},
				{
					"extension": ".props.ts",
					"path": [],
					"body": [
						"import { ButtonHTMLAttributes, DetailedHTMLProps, ReactNode } from 'react';",
						"",
						"export interface IENTEREDNAMEProps extends DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {",
						"    children: ReactNode;",
						"}"
					]
				},
				{
					"extension": ".module.css",
					"body": [
						".root {}"
					]
				},
				{
					"extension": ".test.tsx",
					"path": [],
					"body": [
						"import React from \"react\";",
						"import { render, screen, act } from \"@testing-library/react\";",
						"import userEvent from \"@testing-library/user-event\";",
						"import { ENTEREDNAME } from \"./ENTEREDNAME\";",
						"",
						"describe('ENTEREDNAME', () => {",
						"\ttest('renders App component', async () => {",
						"\t\trender(<ENTEREDNAME></ENTEREDNAME>);",
						"\t\tscreen.debug();",
						"\t});",
						"});"
					]
				}
			]
		},
		{
			"template": "span",
			"defaultPath": [
				"components"
			],
			"files": [
				{
					"extension": ".tsx",
					"path": [],
					"body": [
						"import React, { FC } from 'react'",
						"import classNames from 'classnames';",
						"",
						"import { IENTEREDNAMEProps } from './ENTEREDNAME.props';",
						"import styles from './ENTEREDNAME.module.css';",
						"",
						"export const ENTEREDNAME: FC<IENTEREDNAMEProps> = ({ className, ...props }) => {",
						"",
						"    return (",
						"        <span className={classNames(styles.root, className)} {...props}>",
						"",
						"        </span>",
						"    );",
						"}"
					]
				},
				{
					"extension": ".props.ts",
					"path": [],
					"body": [
						"import { HTMLAttributes, DetailedHTMLProps } from 'react';",
						"",
						"export interface IENTEREDNAMEProps extends DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement> {",
						"",
						"}"
					]
				},
				{
					"extension": ".module.css",
					"path": [],
					"body": [
						".root {}"
					]
				},
				{
					"extension": ".test.tsx",
					"path": [],
					"body": [
						"import React from \"react\";",
						"import { render, screen, act } from \"@testing-library/react\";",
						"import userEvent from \"@testing-library/user-event\";",
						"import { ENTEREDNAME } from \"./ENTEREDNAME\";",
						"",
						"describe('ENTEREDNAME', () => {",
						"\ttest('renders App component', async () => {",
						"\t\trender(<ENTEREDNAME></ENTEREDNAME>);",
						"\t\tscreen.debug();",
						"\t});",
						"});"
					]
				}
			]
		},
		{
			"template": "p",
			"defaultPath": [
				"components"
			],
			"files": [
				{
					"extension": ".tsx",
					"path": [],
					"body": [
						"import React, { FC } from 'react'",
						"import classNames from 'classnames';",
						"",
						"import { IENTEREDNAMEProps } from './ENTEREDNAME.props';",
						"import styles from './ENTEREDNAME.module.css';",
						"",
						"export const ENTEREDNAME: FC<IENTEREDNAMEProps> = ({ className, ...props }) => {",
						"",
						"    return (",
						"        <p className={classNames(styles.root, className)} {...props}>",
						"",
						"        </p>",
						"    );",
						"}"
					]
				},
				{
					"extension": ".props.ts",
					"path": [],
					"body": [
						"import { HTMLAttributes, DetailedHTMLProps } from 'react';",
						"",
						"export interface IENTEREDNAMEProps extends DetailedHTMLProps<HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement> {",
						"",
						"}"
					]
				},
				{
					"extension": ".module.css",
					"path": [],
					"body": [
						".root {}"
					]
				},
				{
					"extension": ".test.tsx",
					"path": [],
					"body": [
						"import React from \"react\";",
						"import { render, screen, act } from \"@testing-library/react\";",
						"import userEvent from \"@testing-library/user-event\";",
						"import { ENTEREDNAME } from \"./ENTEREDNAME\";",
						"",
						"describe('ENTEREDNAME', () => {",
						"\ttest('renders App component', async () => {",
						"\t\trender(<ENTEREDNAME></ENTEREDNAME>);",
						"\t\tscreen.debug();",
						"\t});",
						"});"
					]
				}
			]
		},
		{
			"template": "input",
			"defaultPath": [
				"components"
			],
			"files": [
				{
					"extension": ".tsx",
					"path": [],
					"body": [
						"import React, { FC } from 'react'",
						"import classNames from 'classnames';",
						"",
						"import { IENTEREDNAMEProps } from './ENTEREDNAME.props';",
						"import styles from './ENTEREDNAME.module.css';",
						"",
						"export const ENTEREDNAME: FC<IENTEREDNAMEProps> = ({ className, ...props }) => {",
						"",
						"    return (",
						"        <input className={classNames(styles.root, className)} {...props} />",
						"    );",
						"}"
					]
				},
				{
					"extension": ".props.ts",
					"path": [],
					"body": [
						"import { InputHTMLAttributes, DetailedHTMLProps } from 'react';",
						"",
						"export interface IENTEREDNAMEProps extends DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {",
						"",
						"}"
					]
				},
				{
					"extension": ".module.css",
					"path": [],
					"body": [
						".root {}"
					]
				},
				{
					"extension": ".test.tsx",
					"path": [],
					"body": [
						"import React from \"react\";",
						"import { render, screen, act } from \"@testing-library/react\";",
						"import userEvent from \"@testing-library/user-event\";",
						"import { ENTEREDNAME } from \"./ENTEREDNAME\";",
						"",
						"describe('ENTEREDNAME', () => {",
						"\ttest('renders App component', async () => {",
						"\t\trender(<ENTEREDNAME></ENTEREDNAME>);",
						"\t\tscreen.debug();",
						"\t});",
						"});"
					]
				}
			]
		},
		{
			"template": "form",
			"defaultPath": [
				"components"
			],
			"files": [
				{
					"extension": ".tsx",
					"path": [],
					"body": [
						"import React, { FC } from 'react'",
						"import classNames from 'classnames';",
						"",
						"import { IENTEREDNAMEProps } from './ENTEREDNAME.props';",
						"import styles from './ENTEREDNAME.module.css';",
						"",
						"export const ENTEREDNAME: FC<IENTEREDNAMEProps> = ({ className, ...props }) => {",
						"",
						"    return (",
						"        <form className={classNames(styles.root, className)} {...props}>",
						"",
						"        </form>",
						"    );",
						"}"
					]
				},
				{
					"extension": ".props.ts",
					"path": [],
					"body": [
						"import { FormHTMLAttributes, DetailedHTMLProps } from 'react';",
						"",
						"export interface IENTEREDNAMEProps extends DetailedHTMLProps<FormHTMLAttributes<HTMLFormElement>, HTMLFormElement> {",
						"",
						"}"
					]
				},
				{
					"extension": ".module.css",
					"path": [],
					"body": [
						".root {}"
					]
				},
				{
					"extension": ".test.tsx",
					"path": [],
					"body": [
						"import React from \"react\";",
						"import { render, screen, act } from \"@testing-library/react\";",
						"import userEvent from \"@testing-library/user-event\";",
						"import { ENTEREDNAME } from \"./ENTEREDNAME\";",
						"",
						"describe('ENTEREDNAME', () => {",
						"\ttest('renders App component', async () => {",
						"\t\trender(<ENTEREDNAME></ENTEREDNAME>);",
						"\t\tscreen.debug();",
						"\t});",
						"});"
					]
				}
			]
		},
		{
			"template": "section",
			"defaultPath": [
				"components"
			],
			"files": [
				{
					"extension": ".tsx",
					"path": [],
					"body": [
						"import React, { FC } from 'react'",
						"import classNames from 'classnames';",
						"",
						"import { IENTEREDNAMEProps } from './ENTEREDNAME.props';",
						"import styles from './ENTEREDNAME.module.css';",
						"",
						"export const ENTEREDNAME: FC<IENTEREDNAMEProps> = ({ className, ...props }) => {",
						"",
						"    return (",
						"        <section className={classNames(styles.root, className)} {...props}>",
						"",
						"        </section>",
						"    );",
						"}"
					]
				},
				{
					"extension": ".props.ts",
					"path": [],
					"body": [
						"import { HTMLAttributes, DetailedHTMLProps } from 'react';",
						"",
						"export interface IENTEREDNAMEProps extends DetailedHTMLProps<HTMLAttributes<HTMLElement>, HTMLElement> {",
						"",
						"}"
					]
				},
				{
					"extension": ".module.css",
					"path": [],
					"body": [
						".root {}"
					]
				},
				{
					"extension": ".test.tsx",
					"path": [],
					"body": [
						"import React from \"react\";",
						"import { render, screen, act } from \"@testing-library/react\";",
						"import userEvent from \"@testing-library/user-event\";",
						"import { ENTEREDNAME } from \"./ENTEREDNAME\";",
						"",
						"describe('ENTEREDNAME', () => {",
						"\ttest('renders App component', async () => {",
						"\t\trender(<ENTEREDNAME></ENTEREDNAME>);",
						"\t\tscreen.debug();",
						"\t});",
						"});"
					]
				}
			]
		},
		{
			"template": "h1",
			"defaultPath": [
				"components"
			],
			"files": [
				{
					"extension": ".tsx",
					"path": [],
					"body": [
						"import React, { FC } from 'react'",
						"import classNames from 'classnames';",
						"",
						"import { IENTEREDNAMEProps } from './ENTEREDNAME.props';",
						"import styles from './ENTEREDNAME.module.css';",
						"",
						"export const ENTEREDNAME: FC<IENTEREDNAMEProps> = ({ className, ...props }) => {",
						"",
						"    return (",
						"        <h1 className={classNames(styles.root, className)} {...props}>",
						"",
						"        </h1>",
						"    );",
						"}"
					]
				},
				{
					"extension": ".props.ts",
					"path": [],
					"body": [
						"import { HTMLAttributes, DetailedHTMLProps } from 'react';",
						"",
						"export interface IENTEREDNAMEProps extends DetailedHTMLProps<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement> {",
						"",
						"}"
					]
				},
				{
					"extension": ".module.css",
					"path": [],
					"body": [
						".root {}"
					]
				},
				{
					"extension": ".test.tsx",
					"path": [],
					"body": [
						"import React from \"react\";",
						"import { render, screen, act } from \"@testing-library/react\";",
						"import userEvent from \"@testing-library/user-event\";",
						"import { ENTEREDNAME } from \"./ENTEREDNAME\";",
						"",
						"describe('ENTEREDNAME', () => {",
						"\ttest('renders App component', async () => {",
						"\t\trender(<ENTEREDNAME></ENTEREDNAME>);",
						"\t\tscreen.debug();",
						"\t});",
						"});"
					]
				}
			]
		},
		{
			"template": "a",
			"defaultPath": [
				"components"
			],
			"files": [
				{
					"extension": ".tsx",
					"path": [],
					"body": [
						"import React, { FC } from 'react'",
						"import classNames from 'classnames';",
						"",
						"import { IENTEREDNAMEProps } from './ENTEREDNAME.props';",
						"import styles from './ENTEREDNAME.module.css';",
						"",
						"export const ENTEREDNAME: FC<IENTEREDNAMEProps> = ({ className, ...props }) => {",
						"",
						"    return (",
						"        <a className={classNames(styles.root, className)} {...props}>",
						"",
						"        </a>",
						"    );",
						"}"
					]
				},
				{
					"extension": ".props.ts",
					"path": [],
					"body": [
						"import { AnchorHTMLAttributes, DetailedHTMLProps } from 'react';",
						"",
						"export interface IENTEREDNAMEProps extends DetailedHTMLProps<AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement> {",
						"",
						"}"
					]
				},
				{
					"extension": ".module.css",
					"path": [],
					"body": [
						".root {}"
					]
				},
				{
					"extension": ".test.tsx",
					"path": [],
					"body": [
						"import React from \"react\";",
						"import { render, screen, act } from \"@testing-library/react\";",
						"import userEvent from \"@testing-library/user-event\";",
						"import { ENTEREDNAME } from \"./ENTEREDNAME\";",
						"",
						"describe('ENTEREDNAME', () => {",
						"\ttest('renders App component', async () => {",
						"\t\trender(<ENTEREDNAME></ENTEREDNAME>);",
						"\t\tscreen.debug();",
						"\t});",
						"});"
					]
				}
			]
		},
		{
			"template": "ul",
			"defaultPath": [
				"components"
			],
			"files": [
				{
					"extension": ".tsx",
					"path": [],
					"body": [
						"import React, { FC } from 'react'",
						"import classNames from 'classnames';",
						"",
						"import { IENTEREDNAMEProps } from './ENTEREDNAME.props';",
						"import styles from './ENTEREDNAME.module.css';",
						"",
						"export const ENTEREDNAME: FC<IENTEREDNAMEProps> = ({ className, ...props }) => {",
						"",
						"    return (",
						"        <ul className={classNames(styles.root, className)} {...props}>",
						"",
						"        </ul>",
						"    );",
						"}"
					]
				},
				{
					"extension": ".props.ts",
					"path": [],
					"body": [
						"import { HTMLAttributes, DetailedHTMLProps } from 'react';",
						"",
						"export interface IENTEREDNAMEProps extends DetailedHTMLProps<HTMLAttributes<HTMLUListElement>, HTMLUListElement> {",
						"",
						"}"
					]
				},
				{
					"extension": ".module.css",
					"path": [],
					"body": [
						".root {}"
					]
				},
				{
					"extension": ".test.tsx",
					"path": [],
					"body": [
						"import React from \"react\";",
						"import { render, screen, act } from \"@testing-library/react\";",
						"import userEvent from \"@testing-library/user-event\";",
						"import { ENTEREDNAME } from \"./ENTEREDNAME\";",
						"",
						"describe('ENTEREDNAME', () => {",
						"\ttest('renders App component', async () => {",
						"\t\trender(<ENTEREDNAME></ENTEREDNAME>);",
						"\t\tscreen.debug();",
						"\t});",
						"});"
					]
				}
			]
		},
		{
			"template": "li",
			"defaultPath": [
				"components"
			],
			"files": [
				{
					"extension": ".tsx",
					"path": [],
					"body": [
						"import React, { FC } from 'react'",
						"import classNames from 'classnames';",
						"",
						"import { IENTEREDNAMEProps } from './ENTEREDNAME.props';",
						"import styles from './ENTEREDNAME.module.css';",
						"",
						"export const ENTEREDNAME: FC<IENTEREDNAMEProps> = ({ className, ...props }) => {",
						"",
						"    return (",
						"        <li className={classNames(styles.root, className)} {...props}>",
						"",
						"        </li>",
						"    );",
						"}"
					]
				},
				{
					"extension": ".props.ts",
					"path": [],
					"body": [
						"import { LiHTMLAttributes, DetailedHTMLProps } from 'react';",
						"",
						"export interface IENTEREDNAMEProps extends DetailedHTMLProps<LiHTMLAttributes<HTMLLiElement>, HTMLLiElement> {",
						"",
						"}"
					]
				},
				{
					"extension": ".module.css",
					"path": [],
					"body": [
						".root {}"
					]
				},
				{
					"extension": ".test.tsx",
					"path": [],
					"body": [
						"import React from \"react\";",
						"import { render, screen, act } from \"@testing-library/react\";",
						"import userEvent from \"@testing-library/user-event\";",
						"import { ENTEREDNAME } from \"./ENTEREDNAME\";",
						"",
						"describe('ENTEREDNAME', () => {",
						"\ttest('renders App component', async () => {",
						"\t\trender(<ENTEREDNAME></ENTEREDNAME>);",
						"\t\tscreen.debug();",
						"\t});",
						"});"
					]
				}
			]
		}
	]
}